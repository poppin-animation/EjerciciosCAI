<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAEIQgFQhCARCEIBUIQgEQhCAVIhCAEIQgP/2Q==
</value>
  </data>
</root>